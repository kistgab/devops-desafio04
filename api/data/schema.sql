DROP TABLE IF EXISTS usuario CASCADE;

CREATE TABLE usuario (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    apelido VARCHAR(50),
    data_nascimento DATE NOT NULL,
    senha VARCHAR(128) NOT NULL,
    imagem_url VARCHAR(512),
    ativo boolean NOT NULL DEFAULT true,
    data_cadastro DATE NOT NULL DEFAULT CURRENT_DATE,
    CONSTRAINT pk_usuario_id PRIMARY KEY(id),
    CONSTRAINT uk_email_usuario UNIQUE(email)
);

DROP TABLE IF EXISTS permissao CASCADE;

CREATE TABLE permissao (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    funcao VARCHAR(100) NOT NULL,
    id_usuario BIGINT NOT NULL,
    CONSTRAINT pk_permissao PRIMARY KEY (id),
    CONSTRAINT uk_permissao UNIQUE (funcao, id_usuario),
    CONSTRAINT fk_permissao_usuario FOREIGN KEY (id_usuario) REFERENCES usuario
);

DROP TABLE IF EXISTS amizade CASCADE;

CREATE TABLE amizade (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    id_usuario BIGINT NOT NULL,
    id_amigo BIGINT NOT NULL,
    data_amizade DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) NOT NULL DEFAULT 'PENDENTE',
    CONSTRAINT pk_amizade_id PRIMARY KEY(id),
    CONSTRAINT uk_amizade UNIQUE(id_usuario, id_amigo),
    CONSTRAINT fk_usuario_id FOREIGN KEY(id_usuario) REFERENCES usuario(id),
    CONSTRAINT fk_amigo_id FOREIGN KEY(id_usuario) REFERENCES usuario(id),
    CONSTRAINT ck_status CHECK(status IN ('PENDENTE', 'ACEITA'))
);

DROP TABLE IF EXISTS postagem CASCADE;

CREATE TABLE postagem (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    id_usuario BIGINT NOT NULL,
    conteudo VARCHAR(500) NOT NULL,
    data_postagem TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    privado BOOLEAN NOT NULL DEFAULT FALSE,
    CONSTRAINT pk_postagem_id PRIMARY KEY(id),
    CONSTRAINT fk_usuario_id FOREIGN KEY(id_usuario) REFERENCES usuario(id)
);

DROP TABLE IF EXISTS curtida CASCADE;

CREATE TABLE curtida (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    id_usuario BIGINT NOT NULL,
    id_postagem BIGINT NOT NULL,
    data_curtida TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_curtida_id PRIMARY KEY(id),
    CONSTRAINT fk_usuario_id FOREIGN KEY(id_usuario) REFERENCES usuario(id),
    CONSTRAINT fk_postagem_id FOREIGN KEY(id_postagem) REFERENCES postagem(id),
    CONSTRAINT uk_usuario_curtida_postagem UNIQUE(id_usuario, id_postagem)
);

DROP TABLE IF EXISTS comentario CASCADE;

CREATE TABLE comentario (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    id_usuario BIGINT NOT NULL,
    id_postagem BIGINT NOT NULL,
    conteudo VARCHAR(500) NOT NULL,
    data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_comentario_id PRIMARY KEY(id),
    CONSTRAINT fk_usuario_id FOREIGN KEY(id_usuario) REFERENCES usuario(id)
);